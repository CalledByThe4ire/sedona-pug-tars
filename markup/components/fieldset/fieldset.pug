mixin fieldset(data, modifier)
	+b('fieldset').fieldset&attributes(attributes)
		- const { heading, content } = data;

		+e('legend').legend.legend__
			+e('h2').heading !{heading}
		+e('div').inner
			case modifier
				when 'full-name'
					- const { name, surname, patronymic } = content;

					each key in Object.keys(content)
						+e('p').text
							+e('label').text-input.text-input__
								+e.text
									span #{content[key].label}:
									if content[key].isRequired
										strong: abbr(title='обязательное для заполнения поле') *
								+e('input').input(type='text', placeholder=`${content[key].placeholder}`, required=content[key].isRequired, pattern=content[key].pattern || false)

				when 'contact-info'
					- const { ['phone-number']: phoneNumber, ['e-mail']: eMail, isRequired, icon } = content;

					each key in Object.keys(content)
						- const className = key === 'phone-number' ? 'tel' : 'email'

						+e('p')(class=`__${className}`)
							+e('label').text-input.text-input__
								+e.text
									span #{content[key].label}:
									if content[key].isRequired
										strong: abbr(title='обязательное для заполнения поле') *
								+e.inner
									+e('input').input(type='tel', placeholder=`${content[key].placeholder}`, required=content[key].isRequired, pattern=content[key].pattern || false)
									+e('span').icon
										!= pugHelpers.Icon.call(locals, {iconName: `icon--${content[key].icon}`, className: '', iconWidth: '18', iconHeight: '18'})

				when 'impression'
					+e('ul').list
						each obj in content
							- const { label, name, value, isChecked } = obj;

							+e('li').item
								+e('label').toggle-input.toggle-input--radio__
									+e('input').input(type='radio', name= name, value= value, checked= isChecked)
									+e('div').text= label

				when 'landmarks'
					+e('ul').list
						each obj in content
							- const { label, isChecked } = obj;

							+e('li').item
								+e('label').toggle-input.toggle-input--checkbox__
									+e('input').input(type='checkbox', checked= isChecked)
									+e('div').text= label

				when 'feeling'
						- const { placeholder } = content

						+e('textarea').textarea(placeholder= placeholder)




